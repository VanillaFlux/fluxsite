plugins {
    id "java"
    id "org.springframework.boot" version "$spring_boot_version"
    id "io.spring.dependency-management" version "$spring_dep_version"
    id "war"
}

group = "com.vanillaflux"
version = "$project_version-$build_status.$build_number"

repositories {
    mavenCentral()
    maven {
        name = "quipt"
        url = "https://repo.vanillaflux.com/repository/quipt/"
    }
}

bootWar {
    archiveFileName = "${rootProject.name}-latest.war"
}

dependencies {
    testImplementation platform("org.junit:junit-bom:$junit_version")
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "ch.qos.logback:logback-core:$logback_version"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-web"
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.json:json:$json_version"
    implementation "com.quiptmc:quipt-core:$quipt_core_version"
}

test {
    useJUnitPlatform()
}

def targetJavaVersion = Integer.parseInt(java_version)
java {
    withSourcesJar()
    withJavadocJar()
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}
